#!/usr/bin/env bash
# Usage: fixwinsz WIDTH[xHEIGHT] COMMAND [ARGS...]
# Restrict terminal size assumed by programs to WIDTHxHEIGHT.

unset -f __error
__error() (
  echo "$MYSELF:" "$@" 1>&2
)

unset -f __die
__die() {
  __error "$@"
  exit 1
}

unset -f __check_pgrep
# A parse bug in shellcheck, apparently.
# shellcheck disable=SC2234
__check_pgrep() (
  [[ "$(echo 'Grep test, should output "yes"' \
   | "${GREP-grep}" -Po '(?<=")\w+(?="$)')" == "yes" ]]
)

if [[ ${BASH_SOURCE[0]} == "$0" ]]; then
  MYSELF="$(basename "$(readlink -f "$0")")"
  export MYSELF

  if [[ -z $FIXWINSZ_SO ]]; then
    for PREFIX in $HOME/.local $HOME /usr/local /usr ; do
      FIXWINSZ_SO_TMP="$PREFIX/lib/fixwinsz.so"

      if [[ -e $FIXWINSZ_SO_TMP ]]; then
        FIXWINSZ_SO="$FIXWINSZ_SO_TMP"
      fi
    done
  fi

  if [[ ! -e $FIXWINSZ_SO ]]; then
    __die "ERROR: fixwinsz library does not exist: $FIXWINSZ_SO"
  fi

  __check_pgrep || __die "ERROR: could not find suitable grep"

  WINSZ="$1" ; shift 1

  # TODO: better parsing
  WINSZ_COLS="$(echo "$WINSZ" | "${GREP-grep}" -Po '^\d+')"
  WINSZ_ROWS="$(echo "$WINSZ" | "${GREP-grep}" -Po '(?<=\D)\d+$')"

  if [[ -z $WINSZ_COLS ]]; then
    __die "ERROR: WIDTH not specified, see fixwinsz(1)"
  fi

  REAL_LINES="$(tput lines)"

  LD_PRELOAD="$FIXWINSZ_SO $LD_PRELOAD"
  export WINSZ_COLS WINSZ_ROWS LD_PRELOAD
  "$@"

  # If we're hooking a curses app, it will send the DECSTBM control code
  # ("Set Top and Bottom [scrolling] Margins" ( ESC[1;HEIGHTr) with our HEIGHT,
  # which will persist in the terminal.  This bug is noticeable in zsh.
  # Hence, we need to reset to the real height.
  printf '\033[1;%sr' "$REAL_LINES"
fi

# vim: et:sw=2
