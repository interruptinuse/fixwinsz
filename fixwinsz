#!/usr/bin/env bash
# Usage: fixwinsz WIDTH[xHEIGHT] COMMAND [ARGS...]
# Restrict terminal size assumed by programs to WIDTHxHEIGHT.

unset -f __error
__error() (
  echo "$MYSELF:" "$@" 1>&2
)

unset -f __die
__die() {
  __error "$@"
  exit 1
}

unset -f __check_pgrep
# A parse bug in shellcheck, apparently.
# shellcheck disable=SC2234
__check_pgrep() (
  [[ "$(echo 'Grep test, should output "yes"' \
   | "${GREP-grep}" -Po '(?<=")\w+(?="$)')" == "yes" ]]
)

# Aside from intercepting the output and looking for the csr ESC code,
# we can only guess if the app is going to set the scroll region.
# Probably the best way to do it is to look for the curses library (or, in case
# of neovim, libvterm).
unset -f __is_tui_app
__is_tui_app() (
  local PROGRAM="$1" ; shift 1
  PROGRAM="$(command -v "$PROGRAM")"

  if ! ldd "$PROGRAM" 1>/dev/null 2>/dev/null ; then
    # Not a dynamic executable, behave conservatively
    return 0 # true
  fi

  if [[ $(ldd "$PROGRAM" 2>/dev/null \
        | "${GREP-grep}" -Pc '(libn?curses|libvterm)') != 0 ]]; then
    return 0 # true
  fi

  return 1 # false
)

if [[ ${BASH_SOURCE[0]} == "$0" ]]; then
  MYSELF="$(basename "$(readlink -f "$0")")"
  export MYSELF

  if [[ -z $FIXWINSZ_SO ]]; then
    for PREFIX in $HOME/.local $HOME /usr/local /usr ; do
      FIXWINSZ_SO_TMP="$PREFIX/lib/fixwinsz.so"

      if [[ -e $FIXWINSZ_SO_TMP ]]; then
        FIXWINSZ_SO="$FIXWINSZ_SO_TMP"
      fi
    done
  fi

  if [[ ! -e $FIXWINSZ_SO ]]; then
    __die "ERROR: fixwinsz library does not exist: $FIXWINSZ_SO"
  fi

  __check_pgrep || __die "ERROR: could not find suitable grep"

  RESTORE_SR=

  while getopts :sS OPTION ; do
    case "${OPTION}" in
      s)
        RESTORE_SR=always
        ;;
      S)
        RESTORE_SR=never
        ;;
      default)
        ;;
      \?)
        __die "ERROR: Unknown option: -${OPTARG}"
        ;;
      :)
        __die "ERROR: Argument missing for option: -${OPTARG}"
        ;;
      *)
        __die "ERROR: Unknown getopts failure"
        ;;
    esac
  done
  shift "$((OPTIND-1))"

  WINSZ="$1" ; shift 1

  # TODO: better parsing
  WINSZ_COLS="$(echo "$WINSZ" | "${GREP-grep}" -Po '^\d+')"
  WINSZ_ROWS="$(echo "$WINSZ" | "${GREP-grep}" -Po '(?<=\D)\d+$')"

  if [[ -z $WINSZ_COLS ]]; then
    __die "ERROR: WIDTH not specified, see fixwinsz(1)"
  fi

  REAL_LINES="$(tput lines)"

  LD_PRELOAD="$FIXWINSZ_SO $LD_PRELOAD"
  export WINSZ_COLS WINSZ_ROWS LD_PRELOAD
  "$@"
  RC="$?"

  # If we're hooking a curses app, it will send the DECSTBM control code,
  # aka the csr termcap, "change scroll region", (ESC [ 1 ; HEIGHT r) with our
  # fake HEIGHT, which will persist in the terminal.
  # Hence, we need to reset to the real height.
  case "${RESTORE_SR}" in
    always)
      tput csr 0 "$((REAL_LINES-1))"
      ;;
    never)
      ;;
    *)
      __is_tui_app "$1" && tput csr 0 "$((REAL_LINES-1))"
      ;;
  esac

  exit "$RC"
fi

# vim: et:sw=2
